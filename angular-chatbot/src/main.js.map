{"version":3,"sources":["./src/app/modules/material.module.ts","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/environments/environment.ts","./src/app/pages/fixed-chat/fixed-chat.component.ts","./src/app/pages/fixed-chat/fixed-chat.component.html","./src/app/pages/collapsible-chat/collapsible-chat.component.ts","./src/app/pages/collapsible-chat/collapsible-chat.component.html","./src/app/shared/enums/display-type.enum.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    ClipboardModule\n  ],\n  exports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    ClipboardModule\n  ]\n})\nexport class MaterialModule { }\n","import { AfterViewChecked, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nclass Message {\n  text?: string;\n  type: MessageType;\n}\n\nenum MessageType {\n  Bot = 'bot',\n  User = 'user',\n  Loading = 'loading'\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  @ViewChild('messageContainer') private messageContainer: ElementRef;\n  @Input() public display: string;\n\n  public form: FormGroup;\n  public messages: Array<Message> = [];\n  private canSendMessage = true;\n\n  constructor(private formBuilder: FormBuilder){}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      message: ['']\n    });\n    this.getBotMessage();\n  }\n\n  ngAfterViewChecked(): void {        \n    this.scrollToBottom();        \n  } \n\n  public onClickSendMessage(): void {\n    const message = this.form.get('message').value;\n\n    if (message && this.canSendMessage) {\n      const userMessage: Message = {text: message, type: MessageType.User};\n      this.messages.push(userMessage);\n\n      this.form.get('message').setValue('');\n      this.form.updateValueAndValidity();\n      this.getBotMessage();\n    }\n  }\n\n  private getBotMessage(): void {\n    this.canSendMessage = false;\n    const waitMessage: Message = {type: MessageType.Loading};\n    this.messages.push(waitMessage);\n\n    setTimeout(() => {\n      this.messages.pop();\n      const botMessage: Message = {text: 'Hello! How can I help you?', type: MessageType.Bot};\n      this.messages.push(botMessage);\n      this.canSendMessage = true;\n   }, 2000);\n  }\n\n  public onClickEnter(event: KeyboardEvent): void {\n    event.preventDefault();\n    this.onClickSendMessage();\n  }\n\n  private scrollToBottom(): void {\n    this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;         \n  }\n}\n","<form [formGroup]=\"form\" class=\"chat-container\">\r\n    <mat-card [ngClass]=\"display\">\r\n        <mat-card-header class=\"chat-header\">\r\n            <img mat-card-avatar src=\"./assets/bot.png\" class=\"chat-icon\">\r\n            <mat-card-title class=\"chat-title\">Chatbot</mat-card-title>\r\n            <mat-card-subtitle class=\"chat-subtitle\">\r\n                <div class=\"status-icon\"></div>\r\n                <span>Online</span>\r\n            </mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"chat-content\" #messageContainer>\r\n            <div *ngFor=\"let message of messages\" class=\"messages\">\r\n                <div [ngClass]=\"'message ' + message.type\">\r\n                    {{ message.text }}\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n        <mat-card-actions class=\"chat-actions\">\r\n            <mat-form-field appearance=\"none\" class=\"chat-form\">\r\n            <textarea \r\n                class=\"chat-input\" \r\n                matInput \r\n                type=\"text\" \r\n                placeholder=\"Type message...\" \r\n                formControlName=\"message\"\r\n                (keydown.enter)=\"onClickEnter($event)\"\r\n            ></textarea>\r\n            <button \r\n                class=\"send-button\" \r\n                matSuffix \r\n                mat-icon-button \r\n                aria-label=\"Send\" \r\n                (click)=\"onClickSendMessage()\"\r\n                [disableRipple]=\"true\"\r\n            >\r\n                <mat-icon class=\"send-icon\">send</mat-icon>\r\n            </button>\r\n            </mat-form-field>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  email: 'leticiamichelin@outlook.com',\n  githubUrl: 'https://github.com/leticiabma'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { DisplayType } from 'src/app/shared/enums/display-type.enum';\r\n\r\n@Component({\r\n  selector: 'app-fixed-chat',\r\n  templateUrl: './fixed-chat.component.html',\r\n  styleUrls: ['./fixed-chat.component.scss']\r\n})\r\nexport class FixedChatComponent {\r\n  public displayType = DisplayType;\r\n}\r\n","<app-chat [display]=\"displayType.Fixed\"></app-chat>\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\nimport { DisplayType } from 'src/app/shared/enums/display-type.enum';\r\n\r\n@Component({\r\n  selector: 'app-collapsible-chat',\r\n  templateUrl: './collapsible-chat.component.html',\r\n  styleUrls: ['./collapsible-chat.component.scss'],\r\n  animations: [\r\n    trigger('rotateAnimation', [\r\n      state('rotated', style({ transform: 'rotate(0deg)' })),\r\n      state('default', style({ transform: 'rotate(-360deg)' })),\r\n      transition('default => rotated', animate('500ms ease-out')),\r\n      transition('rotated => default', animate('500ms ease-out')),\r\n    ]),\r\n    trigger('fadeAnimation', [\r\n      transition(\":enter\", [\r\n        style({ opacity: 0 }), \r\n        animate(\r\n          \"150ms ease-in-out\",\r\n          style({ opacity: 1})\r\n        )\r\n      ]),\r\n      transition(\":leave\", [\r\n        style({ opacity: 1}), \r\n        animate(\r\n          \"150ms ease-in-out\",\r\n          style({ opacity: 0,})\r\n        )\r\n      ])\r\n    ]),\r\n  ]\r\n})\r\nexport class CollapsibleChatComponent {\r\n  private readonly botIconPath = './assets/bot.png';\r\n  private readonly chatIconPath = './assets/chat.png';\r\n\r\n  public isOpen = false;\r\n  public iconSrc = this.botIconPath;\r\n  public iconState = 'default';\r\n\r\n  public displayType = DisplayType;\r\n  \r\n  public onChangeChatState(): void {\r\n    this.isOpen = !this.isOpen;\r\n    this.iconState = (this.iconState === 'default' ? 'rotated' : 'default');\r\n\r\n    if (this.isOpen) this.iconSrc = this.chatIconPath;\r\n    else this.iconSrc = this.botIconPath;\r\n  }\r\n}\r\n","<button \r\n    class=\"chat-button\" \r\n    matSuffix \r\n    mat-fab\r\n    (click)=\"onChangeChatState()\"\r\n    [disableRipple]=\"true\">\r\n    <img [src]=\"iconSrc\" [@rotateAnimation]=\"iconState\" [ngClass]=\"isOpen ? 'button-icon chat' : 'button-icon bot'\"> \r\n</button>\r\n<app-chat *ngIf=\"isOpen\" [display]=\"displayType.Collapsible\" [@fadeAnimation]></app-chat>\r\n","export enum DisplayType {\r\n    Fixed = 'fixed-chat',\r\n    Collapsible = 'collapsible-chat'\r\n}","import { Location } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DisplayType } from './shared/enums/display-type.enum';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public email = environment.email;\r\n  public copyEmail = false;\r\n  public displayType = DisplayType;\r\n  public display = DisplayType.Fixed;\r\n\r\n  constructor(private location: Location) {\r\n    const path = this.location.path().split('/')[1];\r\n    this.display =  path ? path as DisplayType : this.display;\r\n  }\r\n\r\n  public onClickCopyEmail(): void {\r\n    this.copyEmail = true;\r\n\r\n    setTimeout(() => {\r\n      this.copyEmail = false;\r\n   }, 2000);\r\n  }\r\n\r\n  public onClickRedirectGithub(): void {\r\n    window.open(environment.githubUrl,'_blank');\r\n  }\r\n}\r\n","<div class=\"full-width full-height\">\r\n  <div class=\"app-header display-flex -row -center\">\r\n    <span class=\"header-title display-flex -center\">\r\n      Angular Chatbot Example\r\n    </span>\r\n    <div class=\"header-actions display-flex -center\">\r\n        <div class=\"chat-buttons\">\r\n          <div class=\"button-container\">\r\n            <input id=\"fixed-chat\" type=\"radio\" name=\"display-button\" value=\"{{displayType.Fixed}}\" routerLink=\"{{displayType.Fixed}}\" [checked]=\"display === displayType.Fixed\"/>\r\n            <label for=\"fixed-chat\">Fixed</label>\r\n          </div>\r\n          <div class=\"button-container\">\r\n            <input id=\"collapsible-chat\" type=\"radio\" name=\"display-button\" value=\"{{displayType.Collapsible}}\" routerLink=\"{{displayType.Collapsible}}\" [checked]=\"display === displayType.Collapsible\"/>\r\n            <label for=\"collapsible-chat\">Collapsible</label>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"app-socials display-flex full-height\">\r\n      <div class=\"socials-icons display-flex -column -center full-height\">\r\n        <div class=\"display-flex -center\">\r\n          <img class=\"icon\" src=\"./assets/github-logo.png\" (click)=\"onClickRedirectGithub()\">\r\n        </div>\r\n        <div class=\"display-flex -center\">\r\n          <img class=\"icon\" src=\"./assets/mail.png\" [cdkCopyToClipboard]=\"email\" (click)=\"onClickCopyEmail()\">\r\n          <span class=\"copy-alert\" *ngIf=\"copyEmail\">Copied email!</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FixedChatComponent } from './pages/fixed-chat/fixed-chat.component';\nimport { CollapsibleChatComponent } from './pages/collapsible-chat/collapsible-chat.component';\nimport { ChatComponent } from './components/chat/chat.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FixedChatComponent,\n    CollapsibleChatComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FixedChatComponent } from './pages/fixed-chat/fixed-chat.component';\r\nimport { CollapsibleChatComponent } from './pages/collapsible-chat/collapsible-chat.component';\r\nimport { DisplayType } from './shared/enums/display-type.enum';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: DisplayType.Fixed,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: DisplayType.Fixed,\r\n    component: FixedChatComponent\r\n  },\r\n  {\r\n    path: DisplayType.Collapsible,\r\n    component: CollapsibleChatComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}