volumes:
  ollama_models: 


services:
  ollama:
    build: ./ollama
    container_name: ollama
    ports:
      - "11434:11434"
    network_mode: host
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    volumes:
      - ollama_models:/root/.ollama

  front:
    image: elbankeji_front
    ports:
      - "3000:3000"


    
      #- OLLAMA_NVIDIA_GPU=true  # Enable NVIDIA GPU support
    #devices:
      #- "/dev/nvidia0:/dev/nvidia0"  # Map the NVIDIA GPU device
      #- "/dev/nvidiactl:/dev/nvidiactl"  # Map the NVIDIA control device
      #- "/dev/nvidia-uvm:/dev/nvidia-uvm"  # Map the NVIDIA user mode device
    #volumes:
      #- "/usr/local/nvidia/lib64:/usr/local/nvidia/lib64"  # Map the NVIDIA library
      #- "/usr/local/nvidia/bin:/usr/local/nvidia/bin"  # Map the NVIDIA binaries

  db:
    image: postgres:17.2
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: bank_db
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d bank_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    network_mode: host

  api:
    build: ./api
    container_name: banking-api
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://admin:admin@db:5432/bank_db"
    network_mode: host

  ai-agents:
    build: ./ai-agents
    container_name: ai-agents
    # depends_on:
    #   - ollama
    ports:
      - "127.0.0.1:8001:8001"
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./ai-agents:/app
    network_mode: host